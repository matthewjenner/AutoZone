// <auto-generated />
using System;
using AutoZone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoZone.Data.Migrations
{
    [DbContext(typeof(AutoZoneDbContext))]
    partial class AutoZoneDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoZone.Domain.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440001"),
                            Amount = 45000m,
                            Date = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ford Mustang purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440001")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440002"),
                            Amount = 52000m,
                            Date = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ford F-150 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440002")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440003"),
                            Amount = 38000m,
                            Date = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ford Explorer purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440004"),
                            Amount = 32000m,
                            Date = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ford Escape purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440004")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440005"),
                            Amount = 48000m,
                            Date = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ford Bronco purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440005")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440006"),
                            Amount = 42000m,
                            Date = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chevrolet Camaro purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440006")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440007"),
                            Amount = 55000m,
                            Date = new DateTime(2024, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chevrolet Silverado purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440007")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440008"),
                            Amount = 28000m,
                            Date = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chevrolet Equinox purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440008")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440009"),
                            Amount = 65000m,
                            Date = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chevrolet Tahoe purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440009")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440010"),
                            Amount = 85000m,
                            Date = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chevrolet Corvette purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440010")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440011"),
                            Amount = 48000m,
                            Date = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dodge Challenger purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440011")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440012"),
                            Amount = 42000m,
                            Date = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dodge Charger purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440012")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440013"),
                            Amount = 45000m,
                            Date = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dodge Durango purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440013")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440014"),
                            Amount = 28000m,
                            Date = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dodge Grand Caravan purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440014")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440015"),
                            Amount = 22000m,
                            Date = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dodge Journey purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440015")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440016"),
                            Amount = 28000m,
                            Date = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Toyota Camry purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440016")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440017"),
                            Amount = 32000m,
                            Date = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Toyota RAV4 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440017")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440018"),
                            Amount = 45000m,
                            Date = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Toyota Highlander purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440018")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440019"),
                            Amount = 38000m,
                            Date = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Toyota Tacoma purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440019")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440020"),
                            Amount = 25000m,
                            Date = new DateTime(2024, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Toyota Corolla purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440020")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440021"),
                            Amount = 25000m,
                            Date = new DateTime(2024, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Honda Civic purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440021")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440022"),
                            Amount = 35000m,
                            Date = new DateTime(2024, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Honda CR-V purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440022")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440023"),
                            Amount = 42000m,
                            Date = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Honda Pilot purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440023")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440024"),
                            Amount = 30000m,
                            Date = new DateTime(2024, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Honda Accord purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440024")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440025"),
                            Amount = 38000m,
                            Date = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Honda Odyssey purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440025")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440026"),
                            Amount = 52000m,
                            Date = new DateTime(2024, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BMW 3 Series purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440026")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440027"),
                            Amount = 48000m,
                            Date = new DateTime(2024, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BMW X3 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440027")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440028"),
                            Amount = 58000m,
                            Date = new DateTime(2024, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BMW X5 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440028")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440029"),
                            Amount = 65000m,
                            Date = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BMW 5 Series purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440029")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440030"),
                            Amount = 85000m,
                            Date = new DateTime(2024, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BMW M3 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440030")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440031"),
                            Amount = 58000m,
                            Date = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mercedes C-Class purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440031")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440032"),
                            Amount = 65000m,
                            Date = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mercedes E-Class purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440032")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440033"),
                            Amount = 52000m,
                            Date = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mercedes GLC purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440033")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440034"),
                            Amount = 72000m,
                            Date = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mercedes GLE purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440034")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440035"),
                            Amount = 120000m,
                            Date = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mercedes S-Class purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440035")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440036"),
                            Amount = 49000m,
                            Date = new DateTime(2024, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Audi A4 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440036")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440037"),
                            Amount = 52000m,
                            Date = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Audi Q5 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440037")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440038"),
                            Amount = 65000m,
                            Date = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Audi A6 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440038")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440039"),
                            Amount = 75000m,
                            Date = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Audi Q7 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440039")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440040"),
                            Amount = 85000m,
                            Date = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Audi RS5 purchase",
                            Type = "Purchase",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440040")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440041"),
                            Amount = 500m,
                            Date = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oil change and maintenance",
                            Type = "Service",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440001")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440042"),
                            Amount = 800m,
                            Date = new DateTime(2024, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Brake replacement",
                            Type = "Service",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440002")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440043"),
                            Amount = 1200m,
                            Date = new DateTime(2024, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tire replacement",
                            Type = "Service",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440003")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440044"),
                            Amount = 300m,
                            Date = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Air filter replacement",
                            Type = "Service",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440004")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440045"),
                            Amount = 600m,
                            Date = new DateTime(2024, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Battery replacement",
                            Type = "Service",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440005")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440046"),
                            Amount = -42000m,
                            Date = new DateTime(2024, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vehicle return and refund",
                            Type = "Refund",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440006")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440047"),
                            Amount = -55000m,
                            Date = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vehicle return and refund",
                            Type = "Refund",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440007")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440048"),
                            Amount = -28000m,
                            Date = new DateTime(2024, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vehicle return and refund",
                            Type = "Refund",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440008")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440049"),
                            Amount = -65000m,
                            Date = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vehicle return and refund",
                            Type = "Refund",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440009")
                        },
                        new
                        {
                            Id = new Guid("770e8400-e29b-41d4-a716-446655440050"),
                            Amount = -85000m,
                            Date = new DateTime(2024, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vehicle return and refund",
                            Type = "Refund",
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            VehicleId = new Guid("660e8400-e29b-41d4-a716-446655440010")
                        });
                });

            modelBuilder.Entity("AutoZone.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Email = "admin@autozone.com",
                            PasswordHash = "hashed-admin-pw",
                            Role = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            Email = "jdoe@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "jdoe"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            Email = "sarah.smith@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "sarah_smith"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            Email = "mike.johnson@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "mike_johnson"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            Email = "lisa.wilson@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "lisa_wilson"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            Email = "david.brown@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "david_brown"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            Email = "emma.davis@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "emma_davis"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            Email = "james.miller@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "james_miller"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            Email = "olivia.garcia@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "olivia_garcia"
                        },
                        new
                        {
                            Id = new Guid("550e8400-e29b-41d4-a716-446655440010"),
                            Email = "robert.rodriguez@email.com",
                            PasswordHash = "hashed-customer-pw",
                            Role = 0,
                            Username = "robert_rodriguez"
                        });
                });

            modelBuilder.Entity("AutoZone.Domain.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Doors")
                        .HasColumnType("int");

                    b.Property<string>("EngineSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewArrival")
                        .HasColumnType("bit");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440001"),
                            Description = "Beautiful Ford Mustang in excellent condition with V8 power.",
                            Doors = 2,
                            EngineSize = "5.0L",
                            Features = "V8 Engine,Leather Seats,Navigation,Bluetooth",
                            ImageUrls = "https://picsum.photos/800/600?random=1;https://picsum.photos/800/600?random=2;https://picsum.photos/800/600?random=3",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Ford",
                            Mileage = 15000,
                            Model = "Mustang",
                            Price = 45000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440002"),
                            Description = "Powerful Ford F-150 pickup truck with towing capability.",
                            Doors = 4,
                            EngineSize = "3.5L",
                            Features = "EcoBoost Engine,Towing Package,4x4,Backup Camera",
                            ImageUrls = "https://picsum.photos/800/600?random=4;https://picsum.photos/800/600?random=5;https://picsum.photos/800/600?random=6",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Ford",
                            Mileage = 8000,
                            Model = "F-150",
                            Price = 52000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440003"),
                            Description = "Spacious Ford Explorer SUV perfect for families.",
                            Doors = 4,
                            EngineSize = "2.3L",
                            Features = "Turbo Engine,Third Row Seating,AWD,Apple CarPlay",
                            ImageUrls = "https://picsum.photos/800/600?random=7;https://picsum.photos/800/600?random=8;https://picsum.photos/800/600?random=9",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Ford",
                            Mileage = 25000,
                            Model = "Explorer",
                            Price = 38000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440004"),
                            Description = "Compact Ford Escape with great fuel efficiency.",
                            Doors = 4,
                            EngineSize = "1.5L",
                            Features = "Hybrid Engine,Compact SUV,Bluetooth,Backup Sensors",
                            ImageUrls = "https://picsum.photos/800/600?random=10;https://picsum.photos/800/600?random=11;https://picsum.photos/800/600?random=12",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Ford",
                            Mileage = 18000,
                            Model = "Escape",
                            Price = 32000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440005"),
                            Description = "Iconic Ford Bronco with off-road capability.",
                            Doors = 2,
                            EngineSize = "2.3L",
                            Features = "Off-road Package,Removable Top,4x4,Terrain Management",
                            ImageUrls = "https://picsum.photos/800/600?random=13;https://picsum.photos/800/600?random=14;https://picsum.photos/800/600?random=15",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Ford",
                            Mileage = 5000,
                            Model = "Bronco",
                            Price = 48000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440006"),
                            Description = "Sporty Chevrolet Camaro with low mileage and great performance.",
                            Doors = 2,
                            EngineSize = "3.6L",
                            Features = "V6 Engine,Sport Package,Bluetooth,Leather Seats",
                            ImageUrls = "https://picsum.photos/800/600?random=16;https://picsum.photos/800/600?random=17;https://picsum.photos/800/600?random=18",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Chevrolet",
                            Mileage = 22000,
                            Model = "Camaro",
                            Price = 42000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440007"),
                            Description = "Powerful Chevrolet Silverado pickup truck.",
                            Doors = 4,
                            EngineSize = "5.3L",
                            Features = "V8 Engine,Towing Package,4x4,Backup Camera",
                            ImageUrls = "https://picsum.photos/800/600?random=19;https://picsum.photos/800/600?random=20;https://picsum.photos/800/600?random=21",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Chevrolet",
                            Mileage = 12000,
                            Model = "Silverado",
                            Price = 55000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440008"),
                            Description = "Reliable Chevrolet Equinox compact SUV.",
                            Doors = 4,
                            EngineSize = "1.5L",
                            Features = "Turbo Engine,Compact SUV,Bluetooth,Backup Sensors",
                            ImageUrls = "https://picsum.photos/800/600?random=22;https://picsum.photos/800/600?random=23;https://picsum.photos/800/600?random=24",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Chevrolet",
                            Mileage = 30000,
                            Model = "Equinox",
                            Price = 28000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440009"),
                            Description = "Luxury Chevrolet Tahoe full-size SUV.",
                            Doors = 4,
                            EngineSize = "5.3L",
                            Features = "V8 Engine,Third Row Seating,4x4,Leather Interior",
                            ImageUrls = "https://picsum.photos/800/600?random=25;https://picsum.photos/800/600?random=26;https://picsum.photos/800/600?random=27",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Chevrolet",
                            Mileage = 8000,
                            Model = "Tahoe",
                            Price = 65000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440010"),
                            Description = "High-performance Chevrolet Corvette sports car.",
                            Doors = 2,
                            EngineSize = "6.2L",
                            Features = "V8 Engine,Mid-engine Design,Performance Package,Carbon Fiber",
                            ImageUrls = "https://picsum.photos/800/600?random=28;https://picsum.photos/800/600?random=29;https://picsum.photos/800/600?random=30",
                            InStock = false,
                            IsNewArrival = false,
                            Make = "Chevrolet",
                            Mileage = 5000,
                            Model = "Corvette",
                            Price = 85000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440011"),
                            Description = "Powerful Dodge Challenger with premium features and Hemi V8.",
                            Doors = 2,
                            EngineSize = "6.4L",
                            Features = "Hemi V8,Premium Audio,Heated Seats,Performance Package",
                            ImageUrls = "https://picsum.photos/800/600?random=31;https://picsum.photos/800/600?random=32;https://picsum.photos/800/600?random=33",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Dodge",
                            Mileage = 8000,
                            Model = "Challenger",
                            Price = 48000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440012"),
                            Description = "Muscle car performance with sedan practicality.",
                            Doors = 4,
                            EngineSize = "5.7L",
                            Features = "Hemi V8,Four Doors,Leather Seats,Performance Suspension",
                            ImageUrls = "https://picsum.photos/800/600?random=34;https://picsum.photos/800/600?random=35;https://picsum.photos/800/600?random=36",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Dodge",
                            Mileage = 15000,
                            Model = "Charger",
                            Price = 42000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440013"),
                            Description = "Spacious Dodge Durango SUV with three rows.",
                            Doors = 4,
                            EngineSize = "3.6L",
                            Features = "V6 Engine,Third Row Seating,AWD,Towing Package",
                            ImageUrls = "https://picsum.photos/800/600?random=37;https://picsum.photos/800/600?random=38;https://picsum.photos/800/600?random=39",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Dodge",
                            Mileage = 25000,
                            Model = "Durango",
                            Price = 45000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440014"),
                            Description = "Practical Dodge Grand Caravan minivan.",
                            Doors = 4,
                            EngineSize = "3.6L",
                            Features = "V6 Engine,Sliding Doors,Third Row Seating,Stow 'n Go",
                            ImageUrls = "https://picsum.photos/800/600?random=40;https://picsum.photos/800/600?random=41;https://picsum.photos/800/600?random=42",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Dodge",
                            Mileage = 35000,
                            Model = "Grand Caravan",
                            Price = 28000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440015"),
                            Description = "Affordable Dodge Journey crossover SUV.",
                            Doors = 4,
                            EngineSize = "2.4L",
                            Features = "Four Cylinder Engine,Compact SUV,Third Row Seating,Bluetooth",
                            ImageUrls = "https://picsum.photos/800/600?random=43;https://picsum.photos/800/600?random=44;https://picsum.photos/800/600?random=45",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Dodge",
                            Mileage = 40000,
                            Model = "Journey",
                            Price = 22000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440016"),
                            Description = "Reliable Toyota Camry with great fuel efficiency and hybrid option.",
                            Doors = 4,
                            EngineSize = "2.5L",
                            Features = "Hybrid Engine,Safety Package,Apple CarPlay,Toyota Safety Sense",
                            ImageUrls = "https://picsum.photos/800/600?random=46;https://picsum.photos/800/600?random=47;https://picsum.photos/800/600?random=48",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Toyota",
                            Mileage = 35000,
                            Model = "Camry",
                            Price = 28000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440017"),
                            Description = "Popular Toyota RAV4 compact SUV with hybrid option.",
                            Doors = 4,
                            EngineSize = "2.5L",
                            Features = "Hybrid Engine,AWD,Compact SUV,Safety Package",
                            ImageUrls = "https://picsum.photos/800/600?random=49;https://picsum.photos/800/600?random=50;https://picsum.photos/800/600?random=51",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Toyota",
                            Mileage = 20000,
                            Model = "RAV4",
                            Price = 32000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440018"),
                            Description = "Spacious Toyota Highlander three-row SUV.",
                            Doors = 4,
                            EngineSize = "3.5L",
                            Features = "V6 Engine,Third Row Seating,AWD,Hybrid Option",
                            ImageUrls = "https://picsum.photos/800/600?random=52;https://picsum.photos/800/600?random=53;https://picsum.photos/800/600?random=54",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Toyota",
                            Mileage = 10000,
                            Model = "Highlander",
                            Price = 45000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440019"),
                            Description = "Reliable Toyota Tacoma midsize pickup truck.",
                            Doors = 4,
                            EngineSize = "3.5L",
                            Features = "V6 Engine,4x4,Towing Package,Off-road Capability",
                            ImageUrls = "https://picsum.photos/800/600?random=55;https://picsum.photos/800/600?random=56;https://picsum.photos/800/600?random=57",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Toyota",
                            Mileage = 18000,
                            Model = "Tacoma",
                            Price = 38000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440020"),
                            Description = "Fuel-efficient Toyota Corolla compact sedan.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "Four Cylinder Engine,Compact Sedan,Safety Package,Hybrid Option",
                            ImageUrls = "https://picsum.photos/800/600?random=58;https://picsum.photos/800/600?random=59;https://picsum.photos/800/600?random=60",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Toyota",
                            Mileage = 30000,
                            Model = "Corolla",
                            Price = 25000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440021"),
                            Description = "Sporty Honda Civic with modern technology and turbo engine.",
                            Doors = 4,
                            EngineSize = "1.5L",
                            Features = "Turbo Engine,Honda Sensing,Android Auto,Sport Package",
                            ImageUrls = "https://picsum.photos/800/600?random=61;https://picsum.photos/800/600?random=62;https://picsum.photos/800/600?random=63",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Honda",
                            Mileage = 18000,
                            Model = "Civic",
                            Price = 25000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440022"),
                            Description = "Popular Honda CR-V compact SUV with turbo engine.",
                            Doors = 4,
                            EngineSize = "1.5L",
                            Features = "Turbo Engine,Compact SUV,AWD,Honda Sensing",
                            ImageUrls = "https://picsum.photos/800/600?random=64;https://picsum.photos/800/600?random=65;https://picsum.photos/800/600?random=66",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Honda",
                            Mileage = 8000,
                            Model = "CR-V",
                            Price = 35000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440023"),
                            Description = "Spacious Honda Pilot three-row SUV.",
                            Doors = 4,
                            EngineSize = "3.5L",
                            Features = "V6 Engine,Third Row Seating,AWD,Honda Sensing",
                            ImageUrls = "https://picsum.photos/800/600?random=67;https://picsum.photos/800/600?random=68;https://picsum.photos/800/600?random=69",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Honda",
                            Mileage = 15000,
                            Model = "Pilot",
                            Price = 42000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440024"),
                            Description = "Reliable Honda Accord midsize sedan with turbo engine.",
                            Doors = 4,
                            EngineSize = "1.5L",
                            Features = "Turbo Engine,Midsize Sedan,Honda Sensing,Apple CarPlay",
                            ImageUrls = "https://picsum.photos/800/600?random=70;https://picsum.photos/800/600?random=71;https://picsum.photos/800/600?random=72",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Honda",
                            Mileage = 25000,
                            Model = "Accord",
                            Price = 30000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440025"),
                            Description = "Family-friendly Honda Odyssey minivan.",
                            Doors = 4,
                            EngineSize = "3.5L",
                            Features = "V6 Engine,Sliding Doors,Third Row Seating,Honda Sensing",
                            ImageUrls = "https://picsum.photos/800/600?random=73;https://picsum.photos/800/600?random=74;https://picsum.photos/800/600?random=75",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Honda",
                            Mileage = 20000,
                            Model = "Odyssey",
                            Price = 38000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440026"),
                            Description = "Luxury BMW 3 Series with premium features and sporty handling.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "TwinPower Turbo,M Sport Package,iDrive 7.0,Leather Seats",
                            ImageUrls = "https://picsum.photos/800/600?random=76;https://picsum.photos/800/600?random=77;https://picsum.photos/800/600?random=78",
                            InStock = false,
                            IsNewArrival = false,
                            Make = "BMW",
                            Mileage = 12000,
                            Model = "3 Series",
                            Price = 52000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440027"),
                            Description = "Luxury BMW X3 compact SUV with premium features.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "TwinPower Turbo,Compact SUV,xDrive AWD,iDrive 7.0",
                            ImageUrls = "https://picsum.photos/800/600?random=79;https://picsum.photos/800/600?random=80;https://picsum.photos/800/600?random=81",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "BMW",
                            Mileage = 18000,
                            Model = "X3",
                            Price = 48000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440028"),
                            Description = "Luxury BMW X5 midsize SUV with premium features.",
                            Doors = 4,
                            EngineSize = "3.0L",
                            Features = "TwinPower Turbo,Midsize SUV,xDrive AWD,Third Row Seating",
                            ImageUrls = "https://picsum.photos/800/600?random=82;https://picsum.photos/800/600?random=83;https://picsum.photos/800/600?random=84",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "BMW",
                            Mileage = 5000,
                            Model = "X5",
                            Price = 65000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440029"),
                            Description = "Luxury BMW 5 Series midsize sedan with premium features.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "TwinPower Turbo,Midsize Sedan,xDrive AWD,iDrive 7.0",
                            ImageUrls = "https://picsum.photos/800/600?random=85;https://picsum.photos/800/600?random=86;https://picsum.photos/800/600?random=87",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "BMW",
                            Mileage = 15000,
                            Model = "5 Series",
                            Price = 58000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440030"),
                            Description = "High-performance BMW M3 with M Sport package.",
                            Doors = 4,
                            EngineSize = "3.0L",
                            Features = "TwinPower Turbo,M Sport Package,Performance Suspension,Carbon Fiber",
                            ImageUrls = "https://picsum.photos/800/600?random=88;https://picsum.photos/800/600?random=89;https://picsum.photos/800/600?random=90",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "BMW",
                            Mileage = 3000,
                            Model = "M3",
                            Price = 85000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440031"),
                            Description = "Elegant Mercedes C-Class with luxury amenities and AMG styling.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "Turbo Engine,AMG Package,MBUX System,Leather Interior",
                            ImageUrls = "https://picsum.photos/800/600?random=91;https://picsum.photos/800/600?random=92;https://picsum.photos/800/600?random=93",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Mercedes",
                            Mileage = 5000,
                            Model = "C-Class",
                            Price = 58000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440032"),
                            Description = "Luxury Mercedes E-Class midsize sedan with premium features.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "Turbo Engine,Luxury Sedan,MBUX System,Leather Interior",
                            ImageUrls = "https://picsum.photos/800/600?random=94;https://picsum.photos/800/600?random=95;https://picsum.photos/800/600?random=96",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Mercedes",
                            Mileage = 12000,
                            Model = "E-Class",
                            Price = 65000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440033"),
                            Description = "Luxury Mercedes GLC compact SUV with premium features.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "Turbo Engine,Compact SUV,4MATIC AWD,MBUX System",
                            ImageUrls = "https://picsum.photos/800/600?random=97;https://picsum.photos/800/600?random=98;https://picsum.photos/800/600?random=99",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Mercedes",
                            Mileage = 8000,
                            Model = "GLC",
                            Price = 52000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440034"),
                            Description = "Luxury Mercedes GLE midsize SUV with premium features.",
                            Doors = 4,
                            EngineSize = "3.0L",
                            Features = "TwinTurbo Engine,Midsize SUV,4MATIC AWD,Third Row Seating",
                            ImageUrls = "https://picsum.photos/800/600?random=100;https://picsum.photos/800/600?random=101;https://picsum.photos/800/600?random=102",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Mercedes",
                            Mileage = 15000,
                            Model = "GLE",
                            Price = 72000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440035"),
                            Description = "Ultra-luxury Mercedes S-Class flagship sedan.",
                            Doors = 4,
                            EngineSize = "3.0L",
                            Features = "TwinTurbo Engine,Luxury Sedan,MBUX System,Executive Seating",
                            ImageUrls = "https://picsum.photos/800/600?random=103;https://picsum.photos/800/600?random=104;https://picsum.photos/800/600?random=105",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Mercedes",
                            Mileage = 2000,
                            Model = "S-Class",
                            Price = 120000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440036"),
                            Description = "Sophisticated Audi A4 with quattro all-wheel drive and premium features.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "Quattro AWD,Virtual Cockpit,Bang & Olufsen Audio,Turbo Engine",
                            ImageUrls = "https://picsum.photos/800/600?random=106;https://picsum.photos/800/600?random=107;https://picsum.photos/800/600?random=108",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Audi",
                            Mileage = 15000,
                            Model = "A4",
                            Price = 49000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440037"),
                            Description = "Luxury Audi Q5 compact SUV with quattro all-wheel drive.",
                            Doors = 4,
                            EngineSize = "2.0L",
                            Features = "Quattro AWD,Compact SUV,Virtual Cockpit,Turbo Engine",
                            ImageUrls = "https://picsum.photos/800/600?random=109;https://picsum.photos/800/600?random=110;https://picsum.photos/800/600?random=111",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Audi",
                            Mileage = 8000,
                            Model = "Q5",
                            Price = 52000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440038"),
                            Description = "Luxury Audi A6 midsize sedan with quattro all-wheel drive.",
                            Doors = 4,
                            EngineSize = "3.0L",
                            Features = "Quattro AWD,Midsize Sedan,Virtual Cockpit,Turbo Engine",
                            ImageUrls = "https://picsum.photos/800/600?random=112;https://picsum.photos/800/600?random=113;https://picsum.photos/800/600?random=114",
                            InStock = true,
                            IsNewArrival = false,
                            Make = "Audi",
                            Mileage = 12000,
                            Model = "A6",
                            Price = 65000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440039"),
                            Description = "Luxury Audi Q7 midsize SUV with quattro all-wheel drive.",
                            Doors = 4,
                            EngineSize = "3.0L",
                            Features = "Quattro AWD,Midsize SUV,Virtual Cockpit,Third Row Seating",
                            ImageUrls = "https://picsum.photos/800/600?random=115;https://picsum.photos/800/600?random=116;https://picsum.photos/800/600?random=117",
                            InStock = true,
                            IsNewArrival = true,
                            Make = "Audi",
                            Mileage = 5000,
                            Model = "Q7",
                            Price = 75000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("660e8400-e29b-41d4-a716-446655440040"),
                            Description = "High-performance Audi RS5 with quattro all-wheel drive.",
                            Doors = 4,
                            EngineSize = "2.9L",
                            Features = "Quattro AWD,RS Performance Package,Turbo Engine,Carbon Fiber",
                            ImageUrls = "https://picsum.photos/800/600?random=118;https://picsum.photos/800/600?random=119;https://picsum.photos/800/600?random=120",
                            InStock = false,
                            IsNewArrival = false,
                            Make = "Audi",
                            Mileage = 8000,
                            Model = "RS5",
                            Price = 85000m,
                            UserId = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Year = 2022
                        });
                });

            modelBuilder.Entity("AutoZone.Domain.Models.Transaction", b =>
                {
                    b.HasOne("AutoZone.Domain.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoZone.Domain.Models.Vehicle", "Vehicle")
                        .WithMany("Transactions")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AutoZone.Domain.Models.Vehicle", b =>
                {
                    b.HasOne("AutoZone.Domain.Models.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoZone.Domain.Models.User", b =>
                {
                    b.Navigation("Transactions");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("AutoZone.Domain.Models.Vehicle", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
